import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';

/**
 *  carts = [
    { quantity: 1, _id: 'abc',  detail: { _id: 'abc', name: 'def', quantity: 10}},
    { quantity: 1, _id: '123',  detail: { _id: '123', name: '456', quantity: 20}},
  ]
 * 
 */
const initialState = {
    carts: [] // thÃ´ng tin cart
};


export const orderSlice = createSlice({
    name: 'order',
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {
        doAddBookAction: (state, action) => {
            let carts = state.carts;
            const item = action.payload;

            // check if item exist in cart
            let isExistIndex = carts.findIndex(c => c._id === item._id);
            // if exist => update quantity
            if (isExistIndex > -1) {
                carts[isExistIndex].quantity = carts[isExistIndex].quantity + item.quantity;
                // check if quantity > quantity in stock => set quantity = quantity in stock
                if (carts[isExistIndex].quantity > carts[isExistIndex].detail.quantity) {
                    carts[isExistIndex].quantity = carts[isExistIndex].detail.quantity;
                }
            } else {
                carts.push({ quantity: item.quantity, _id: item._id, detail: item.detail })
            }
            //update redux
            state.carts = carts;

        },
    },
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.
    extraReducers: (builder) => {

    },
});

export const { doAddBookAction } = orderSlice.actions;


export default orderSlice.reducer;